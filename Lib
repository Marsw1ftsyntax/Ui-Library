-- OreOFDAY UI Library
-- Uma UI Library completa e bonita para Roblox
-- Criada especialmente para OreOFDAY
-- Cores: Azul Neon e Preto
-- 
-- RAW URL: https://raw.githubusercontent.com/Marsw1ftsyntax/Ui-Library/refs/heads/main/Lib
-- 
-- Como usar:
-- local OreOFDAY = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marsw1ftsyntax/Ui-Library/refs/heads/main/Lib"))()
-- OreOFDAY.Load()

local OreOFDAY = {}
OreOFDAY.__index = OreOFDAY

-- Configurações da UI
OreOFDAY.Config = {
    Colors = {
        Primary = Color3.fromRGB(0, 150, 255),      -- Azul neon
        Secondary = Color3.fromRGB(0, 100, 200),    -- Azul mais escuro
        Accent = Color3.fromRGB(0, 200, 255),       -- Azul claro neon
        Background = Color3.fromRGB(15, 15, 15),    -- Preto
        Surface = Color3.fromRGB(25, 25, 25),       -- Preto mais claro
        Text = Color3.fromRGB(255, 255, 255),       -- Branco
        TextSecondary = Color3.fromRGB(200, 200, 200), -- Cinza claro
        Error = Color3.fromRGB(255, 50, 50),        -- Vermelho
        Success = Color3.fromRGB(50, 255, 50),      -- Verde
        Warning = Color3.fromRGB(255, 200, 50)      -- Amarelo
    },
    Fonts = {
        Primary = Enum.Font.GothamBold,
        Secondary = Enum.Font.Gotham,
        Code = Enum.Font.Code
    },
    CornerRadius = UDim.new(0, 8),
    StrokeThickness = 2,
    AnimationSpeed = 0.3
}

-- Serviços do Roblox
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

-- Variáveis globais
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local ScreenGui = nil
local MainFrame = nil
local CurrentTheme = "Dark"

-- Sistema de Keys
OreOFDAY.KeySystem = {
    Keys = {},
    ValidKeys = {},
    KeyFile = "OreOFDAY_Keys.json"
}

-- Sistema Discord
OreOFDAY.Discord = {
    Webhook = "",
    ServerInvite = "",
    Enabled = false
}

-- Função para criar efeitos de neon
function OreOFDAY:CreateNeonEffect(parent, color)
    local neon = Instance.new("Frame")
    neon.Name = "NeonEffect"
    neon.BackgroundTransparency = 1
    neon.Size = UDim2.new(1, 4, 1, 4)
    neon.Position = UDim2.new(0, -2, 0, -2)
    neon.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = neon
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = color
    stroke.Thickness = OreOFDAY.Config.StrokeThickness
    stroke.Transparency = 0.5
    stroke.Parent = neon
    
    return neon
end

-- Função para criar gradiente
function OreOFDAY:CreateGradient(parent, color1, color2, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(color1, color2)
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

-- Função para animação suave
function OreOFDAY:TweenObject(object, properties, duration)
    local tweenInfo = TweenInfo.new(duration or OreOFDAY.Config.AnimationSpeed, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Função para criar botão
function OreOFDAY:CreateButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Name = "OreOFDAYButton"
    button.Size = UDim2.new(0, 200, 0, 40)
    button.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    button.Text = text
    button.TextColor3 = OreOFDAY.Config.Colors.Text
    button.Font = OreOFDAY.Config.Fonts.Primary
    button.TextSize = 16
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = button
    
    local neon = OreOFDAY:CreateNeonEffect(button, OreOFDAY.Config.Colors.Primary)
    
    -- Efeitos de hover
    button.MouseEnter:Connect(function()
        OreOFDAY:TweenObject(button, {BackgroundColor3 = OreOFDAY.Config.Colors.Primary}, 0.2)
        OreOFDAY:TweenObject(neon, {Size = UDim2.new(1, 6, 1, 6), Position = UDim2.new(0, -3, 0, -3)}, 0.2)
    end)
    
    button.MouseLeave:Connect(function()
        OreOFDAY:TweenObject(button, {BackgroundColor3 = OreOFDAY.Config.Colors.Surface}, 0.2)
        OreOFDAY:TweenObject(neon, {Size = UDim2.new(1, 4, 1, 4), Position = UDim2.new(0, -2, 0, -2)}, 0.2)
    end)
    
    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)
    
    return button
end

-- Função para criar input
function OreOFDAY:CreateInput(parent, placeholder, callback)
    local inputFrame = Instance.new("Frame")
    inputFrame.Name = "OreOFDAYInput"
    inputFrame.Size = UDim2.new(0, 250, 0, 35)
    inputFrame.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    inputFrame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = inputFrame
    
    local neon = OreOFDAY:CreateNeonEffect(inputFrame, OreOFDAY.Config.Colors.Primary)
    
    local input = Instance.new("TextBox")
    input.Name = "InputBox"
    input.Size = UDim2.new(1, -20, 1, -10)
    input.Position = UDim2.new(0, 10, 0, 5)
    input.BackgroundTransparency = 1
    input.Text = ""
    input.PlaceholderText = placeholder
    input.TextColor3 = OreOFDAY.Config.Colors.Text
    input.PlaceholderColor3 = OreOFDAY.Config.Colors.TextSecondary
    input.Font = OreOFDAY.Config.Fonts.Secondary
    input.TextSize = 14
    input.Parent = inputFrame
    
    input.FocusLost:Connect(function()
        if callback then
            callback(input.Text)
        end
    end)
    
    return inputFrame
end

-- Função para criar toggle
function OreOFDAY:CreateToggle(parent, text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "OreOFDAYToggle"
    toggleFrame.Size = UDim2.new(0, 200, 0, 30)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = parent
    
    local toggle = Instance.new("Frame")
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(0, 50, 0, 25)
    toggle.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    toggle.Parent = toggleFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = toggle
    
    local neon = OreOFDAY:CreateNeonEffect(toggle, OreOFDAY.Config.Colors.Primary)
    
    local indicator = Instance.new("Frame")
    indicator.Name = "Indicator"
    indicator.Size = UDim2.new(0, 19, 0, 19)
    indicator.Position = UDim2.new(0, 3, 0, 3)
    indicator.BackgroundColor3 = OreOFDAY.Config.Colors.Primary
    indicator.Parent = toggle
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 9)
    indicatorCorner.Parent = indicator
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(0, 140, 1, 0)
    label.Position = UDim2.new(0, 60, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = OreOFDAY.Config.Colors.Text
    label.Font = OreOFDAY.Config.Fonts.Secondary
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local isToggled = default or false
    
    local function updateToggle()
        if isToggled then
            OreOFDAY:TweenObject(indicator, {Position = UDim2.new(0, 28, 0, 3)}, 0.2)
            OreOFDAY:TweenObject(toggle, {BackgroundColor3 = OreOFDAY.Config.Colors.Primary}, 0.2)
        else
            OreOFDAY:TweenObject(indicator, {Position = UDim2.new(0, 3, 0, 3)}, 0.2)
            OreOFDAY:TweenObject(toggle, {BackgroundColor3 = OreOFDAY.Config.Colors.Surface}, 0.2)
        end
    end
    
    updateToggle()
    
    toggle.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        updateToggle()
        if callback then
            callback(isToggled)
        end
    end)
    
    return toggleFrame
end

-- Função para criar slider
function OreOFDAY:CreateSlider(parent, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "OreOFDAYSlider"
    sliderFrame.Size = UDim2.new(0, 250, 0, 50)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = parent
    
    local track = Instance.new("Frame")
    track.Name = "Track"
    track.Size = UDim2.new(1, 0, 0, 6)
    track.Position = UDim2.new(0, 0, 0, 20)
    track.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    track.Parent = sliderFrame
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(0, 3)
    trackCorner.Parent = track
    
    local neon = OreOFDAY:CreateNeonEffect(track, OreOFDAY.Config.Colors.Primary)
    
    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.new(0, 0, 1, 0)
    fill.BackgroundColor3 = OreOFDAY.Config.Colors.Primary
    fill.Parent = track
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = fill
    
    local thumb = Instance.new("Frame")
    thumb.Name = "Thumb"
    thumb.Size = UDim2.new(0, 16, 0, 16)
    thumb.Position = UDim2.new(0, -8, 0, -5)
    thumb.BackgroundColor3 = OreOFDAY.Config.Colors.Accent
    thumb.Parent = track
    
    local thumbCorner = Instance.new("UICorner")
    thumbCorner.CornerRadius = UDim.new(0, 8)
    thumbCorner.Parent = thumb
    
    local thumbNeon = OreOFDAY:CreateNeonEffect(thumb, OreOFDAY.Config.Colors.Accent)
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = "Value: " .. (default or min)
    label.TextColor3 = OreOFDAY.Config.Colors.Text
    label.Font = OreOFDAY.Config.Fonts.Secondary
    label.TextSize = 12
    label.Parent = sliderFrame
    
    local currentValue = default or min
    
    local function updateSlider(value)
        local percentage = (value - min) / (max - min)
        OreOFDAY:TweenObject(fill, {Size = UDim2.new(percentage, 0, 1, 0)}, 0.1)
        OreOFDAY:TweenObject(thumb, {Position = UDim2.new(percentage, -8, 0, -5)}, 0.1)
        label.Text = "Value: " .. math.floor(value)
        if callback then
            callback(value)
        end
    end
    
    updateSlider(currentValue)
    
    -- Interação do slider
    local isDragging = false
    
    track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        if isDragging then
            local mousePos = UserInputService:GetMouseLocation()
            local trackPos = track.AbsolutePosition
            local trackSize = track.AbsoluteSize
            
            local relativeX = math.clamp(mousePos.X - trackPos.X, 0, trackSize.X)
            local percentage = relativeX / trackSize.X
            local newValue = min + (max - min) * percentage
            
            currentValue = newValue
            updateSlider(newValue)
        end
    end)
    
    return sliderFrame
end

-- Função para criar dropdown
function OreOFDAY:CreateDropdown(parent, options, default, callback)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Name = "OreOFDAYDropdown"
    dropdownFrame.Size = UDim2.new(0, 200, 0, 35)
    dropdownFrame.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    dropdownFrame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = dropdownFrame
    
    local neon = OreOFDAY:CreateNeonEffect(dropdownFrame, OreOFDAY.Config.Colors.Primary)
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -40, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = default or options[1] or "Select..."
    label.TextColor3 = OreOFDAY.Config.Colors.Text
    label.Font = OreOFDAY.Config.Fonts.Secondary
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = dropdownFrame
    
    local arrow = Instance.new("TextLabel")
    arrow.Name = "Arrow"
    arrow.Size = UDim2.new(0, 20, 1, 0)
    arrow.Position = UDim2.new(1, -30, 0, 0)
    arrow.BackgroundTransparency = 1
    arrow.Text = "▼"
    arrow.TextColor3 = OreOFDAY.Config.Colors.Text
    arrow.Font = OreOFDAY.Config.Fonts.Primary
    arrow.TextSize = 12
    arrow.Parent = dropdownFrame
    
    local isOpen = false
    local dropdownList = nil
    
    local function toggleDropdown()
        isOpen = not isOpen
        
        if isOpen then
            arrow.Text = "▲"
            
            dropdownList = Instance.new("Frame")
            dropdownList.Name = "DropdownList"
            dropdownList.Size = UDim2.new(1, 0, 0, 0)
            dropdownList.Position = UDim2.new(0, 0, 1, 5)
            dropdownList.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
            dropdownList.Parent = dropdownFrame
            
            local listCorner = Instance.new("UICorner")
            listCorner.CornerRadius = OreOFDAY.Config.CornerRadius
            listCorner.Parent = dropdownList
            
            local listNeon = OreOFDAY:CreateNeonEffect(dropdownList, OreOFDAY.Config.Colors.Primary)
            
            local listLayout = Instance.new("UIListLayout")
            listLayout.Parent = dropdownList
            
            for i, option in ipairs(options) do
                local optionButton = Instance.new("TextButton")
                optionButton.Size = UDim2.new(1, -10, 0, 30)
                optionButton.Position = UDim2.new(0, 5, 0, (i-1) * 35)
                optionButton.BackgroundColor3 = OreOFDAY.Config.Colors.Background
                optionButton.Text = option
                optionButton.TextColor3 = OreOFDAY.Config.Colors.Text
                optionButton.Font = OreOFDAY.Config.Fonts.Secondary
                optionButton.TextSize = 12
                optionButton.Parent = dropdownList
                
                local optionCorner = Instance.new("UICorner")
                optionCorner.CornerRadius = UDim.new(0, 4)
                optionCorner.Parent = optionButton
                
                optionButton.MouseButton1Click:Connect(function()
                    label.Text = option
                    isOpen = false
                    arrow.Text = "▼"
                    dropdownList:Destroy()
                    if callback then
                        callback(option)
                    end
                end)
                
                optionButton.MouseEnter:Connect(function()
                    OreOFDAY:TweenObject(optionButton, {BackgroundColor3 = OreOFDAY.Config.Colors.Primary}, 0.2)
                end)
                
                optionButton.MouseLeave:Connect(function()
                    OreOFDAY:TweenObject(optionButton, {BackgroundColor3 = OreOFDAY.Config.Colors.Background}, 0.2)
                end)
            end
            
            OreOFDAY:TweenObject(dropdownList, {Size = UDim2.new(1, 0, 0, #options * 35 + 10)}, 0.3)
        else
            arrow.Text = "▼"
            if dropdownList then
                dropdownList:Destroy()
            end
        end
    end
    
    dropdownFrame.MouseButton1Click:Connect(toggleDropdown)
    
    return dropdownFrame
end

-- Função para criar notificação
function OreOFDAY:CreateNotification(title, message, type, duration)
    duration = duration or 5
    
    local notification = Instance.new("Frame")
    notification.Name = "OreOFDAYNotification"
    notification.Size = UDim2.new(0, 300, 0, 80)
    notification.Position = UDim2.new(1, -320, 0, 20)
    notification.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    notification.Parent = ScreenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = notification
    
    local neon = OreOFDAY:CreateNeonEffect(notification, OreOFDAY.Config.Colors.Primary)
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -20, 0, 20)
    titleLabel.Position = UDim2.new(0, 10, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = OreOFDAY.Config.Colors.Text
    titleLabel.Font = OreOFDAY.Config.Fonts.Primary
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = notification
    
    local messageLabel = Instance.new("TextLabel")
    messageLabel.Name = "Message"
    messageLabel.Size = UDim2.new(1, -20, 0, 40)
    messageLabel.Position = UDim2.new(0, 10, 0, 35)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.TextColor3 = OreOFDAY.Config.Colors.TextSecondary
    messageLabel.Font = OreOFDAY.Config.Fonts.Secondary
    messageLabel.TextSize = 12
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextWrapped = true
    messageLabel.Parent = notification
    
    -- Animação de entrada
    notification.Position = UDim2.new(1, 0, 0, 20)
    OreOFDAY:TweenObject(notification, {Position = UDim2.new(1, -320, 0, 20)}, 0.5)
    
    -- Auto-destruir após duração
    task.spawn(function()
        task.wait(duration)
        OreOFDAY:TweenObject(notification, {Position = UDim2.new(1, 0, 0, 20)}, 0.5)
        task.wait(0.5)
        notification:Destroy()
    end)
    
    return notification
end

-- Função para carregar a UI principal
function OreOFDAY:LoadUI()
    -- Criar ScreenGui
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "OreOFDAYUILibrary"
    ScreenGui.Parent = CoreGui
    
    -- Frame principal
    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 900, 0, 600)
    MainFrame.Position = UDim2.new(0.5, -450, 0.5, -300)
    MainFrame.BackgroundColor3 = OreOFDAY.Config.Colors.Background
    MainFrame.Parent = ScreenGui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = OreOFDAY.Config.CornerRadius
    mainCorner.Parent = MainFrame
    
    local mainNeon = OreOFDAY:CreateNeonEffect(MainFrame, OreOFDAY.Config.Colors.Primary)
    
    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 60)
    header.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    header.Parent = MainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 8, 0, 0)
    headerCorner.Parent = header
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(0, 250, 1, 0)
    title.Position = UDim2.new(0, 20, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "OreOFDAY UI Library"
    title.TextColor3 = OreOFDAY.Config.Colors.Primary
    title.Font = OreOFDAY.Config.Fonts.Primary
    title.TextSize = 22
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 35, 0, 35)
    closeButton.Position = UDim2.new(1, -45, 0, 12)
    closeButton.BackgroundColor3 = OreOFDAY.Config.Colors.Error
    closeButton.Text = "X"
    closeButton.TextColor3 = OreOFDAY.Config.Colors.Text
    closeButton.Font = OreOFDAY.Config.Fonts.Primary
    closeButton.TextSize = 18
    closeButton.Parent = header
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 8)
    closeCorner.Parent = closeButton
    
    closeButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    -- Sidebar
    local sidebar = Instance.new("Frame")
    sidebar.Name = "Sidebar"
    sidebar.Size = UDim2.new(0, 220, 1, -60)
    sidebar.Position = UDim2.new(0, 0, 0, 60)
    sidebar.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    sidebar.Parent = MainFrame
    
    local sidebarCorner = Instance.new("UICorner")
    sidebarCorner.CornerRadius = UDim.new(0, 0, 0, 8)
    sidebarCorner.Parent = sidebar
    
    -- Conteúdo principal
    local content = Instance.new("ScrollingFrame")
    content.Name = "Content"
    content.Size = UDim2.new(1, -220, 1, -60)
    content.Position = UDim2.new(0, 220, 0, 60)
    content.BackgroundTransparency = 1
    content.ScrollBarThickness = 6
    content.ScrollBarImageColor3 = OreOFDAY.Config.Colors.Primary
    content.Parent = MainFrame
    
    local contentLayout = Instance.new("UIPadding")
    contentLayout.PaddingLeft = UDim.new(0, 20)
    contentLayout.PaddingRight = UDim.new(0, 20)
    contentLayout.PaddingTop = UDim.new(0, 20)
    contentLayout.PaddingBottom = UDim.new(0, 20)
    contentLayout.Parent = content
    
    local contentList = Instance.new("UIListLayout")
    contentList.Parent = content
    contentList.Padding = UDim.new(0, 15)
    contentList.SortOrder = Enum.SortOrder.LayoutOrder
    
    -- Criar seções da UI
    OreOFDAY:CreateMainSection(content)
    OreOFDAY:CreateDiscordSection(content)
    OreOFDAY:CreateKeySection(content)
    OreOFDAY:CreateSettingsSection(content)
    
    -- Tornar a janela arrastável
    local isDragging = false
    local dragStart = nil
    local startPos = nil
    
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    OreOFDAY:CreateNotification("OreOFDAY UI Library", "Interface carregada com sucesso!", "Success")
end

-- Função para criar seção principal
function OreOFDAY:CreateMainSection(parent)
    local section = Instance.new("Frame")
    section.Name = "MainSection"
    section.Size = UDim2.new(1, 0, 0, 220)
    section.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    section.Parent = parent
    section.LayoutOrder = 1
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = section
    
    local neon = OreOFDAY:CreateNeonEffect(section, OreOFDAY.Config.Colors.Primary)
    
    local title = Instance.new("TextLabel")
    title.Name = "SectionTitle"
    title.Size = UDim2.new(1, -20, 0, 35)
    title.Position = UDim2.new(0, 15, 0, 15)
    title.BackgroundTransparency = 1
    title.Text = "Controles Principais"
    title.TextColor3 = OreOFDAY.Config.Colors.Primary
    title.Font = OreOFDAY.Config.Fonts.Primary
    title.TextSize = 20
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = section
    
    local button1 = OreOFDAY:CreateButton(section, "Executar Script", function()
        OreOFDAY:CreateNotification("Script", "Script executado com sucesso!", "Success")
    end)
    button1.Position = UDim2.new(0, 15, 0, 65)
    button1.Size = UDim2.new(0, 180, 0, 40)
    
    local button2 = OreOFDAY:CreateButton(section, "Limpar Console", function()
        OreOFDAY:CreateNotification("Console", "Console limpo!", "Info")
    end)
    button2.Position = UDim2.new(0, 210, 0, 65)
    button2.Size = UDim2.new(0, 180, 0, 40)
    
    local button3 = OreOFDAY:CreateButton(section, "Salvar Configurações", function()
        OreOFDAY:CreateNotification("Config", "Configurações salvas!", "Success")
    end)
    button3.Position = UDim2.new(0, 15, 0, 115)
    button3.Size = UDim2.new(0, 180, 0, 40)
    
    local button4 = OreOFDAY:CreateButton(section, "Carregar Script", function()
        OreOFDAY:CreateNotification("Script", "Script carregado!", "Info")
    end)
    button4.Position = UDim2.new(0, 210, 0, 115)
    button4.Size = UDim2.new(0, 180, 0, 40)
    
    local toggle = OreOFDAY:CreateToggle(section, "Auto-Executar", false, function(value)
        OreOFDAY:CreateNotification("Toggle", "Auto-Executar: " .. (value and "Ativado" or "Desativado"), "Info")
    end)
    toggle.Position = UDim2.new(0, 15, 0, 170)
    
    local slider = OreOFDAY:CreateSlider(section, 0, 100, 50, function(value)
        -- Callback do slider
    end)
    slider.Position = UDim2.new(0, 250, 0, 170)
end

-- Função para criar seção Discord
function OreOFDAY:CreateDiscordSection(parent)
    local section = Instance.new("Frame")
    section.Name = "DiscordSection"
    section.Size = UDim2.new(1, 0, 0, 180)
    section.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    section.Parent = parent
    section.LayoutOrder = 2
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = section
    
    local neon = OreOFDAY:CreateNeonEffect(section, OreOFDAY.Config.Colors.Primary)
    
    local title = Instance.new("TextLabel")
    title.Name = "SectionTitle"
    title.Size = UDim2.new(1, -20, 0, 35)
    title.Position = UDim2.new(0, 15, 0, 15)
    title.BackgroundTransparency = 1
    title.Text = "Configurações Discord"
    title.TextColor3 = OreOFDAY.Config.Colors.Primary
    title.Font = OreOFDAY.Config.Fonts.Primary
    title.TextSize = 20
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = section
    
    local webhookInput = OreOFDAY:CreateInput(section, "Webhook URL", function(text)
        OreOFDAY.Discord.Webhook = text
    end)
    webhookInput.Position = UDim2.new(0, 15, 0, 65)
    webhookInput.Size = UDim2.new(0, 280, 0, 35)
    
    local serverInput = OreOFDAY:CreateInput(section, "Server Invite", function(text)
        OreOFDAY.Discord.ServerInvite = text
    end)
    serverInput.Position = UDim2.new(0, 15, 0, 110)
    serverInput.Size = UDim2.new(0, 280, 0, 35)
    
    local joinButton = OreOFDAY:CreateButton(section, "Entrar no Server", function()
        if OreOFDAY.Discord.ServerInvite ~= "" then
            OreOFDAY:CreateNotification("Discord", "Link do servidor copiado!", "Success")
        else
            OreOFDAY:CreateNotification("Discord", "Configure o link do servidor primeiro!", "Error")
        end
    end)
    joinButton.Position = UDim2.new(0, 310, 0, 65)
    joinButton.Size = UDim2.new(0, 140, 0, 35)
    
    local testWebhookButton = OreOFDAY:CreateButton(section, "Testar Webhook", function()
        if OreOFDAY.Discord.Webhook ~= "" then
            OreOFDAY:CreateNotification("Discord", "Webhook testado com sucesso!", "Success")
        else
            OreOFDAY:CreateNotification("Discord", "Configure o webhook primeiro!", "Error")
        end
    end)
    testWebhookButton.Position = UDim2.new(0, 310, 0, 110)
    testWebhookButton.Size = UDim2.new(0, 140, 0, 35)
end

-- Função para criar seção de Keys
function OreOFDAY:CreateKeySection(parent)
    local section = Instance.new("Frame")
    section.Name = "KeySection"
    section.Size = UDim2.new(1, 0, 0, 140)
    section.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    section.Parent = parent
    section.LayoutOrder = 3
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = section
    
    local neon = OreOFDAY:CreateNeonEffect(section, OreOFDAY.Config.Colors.Primary)
    
    local title = Instance.new("TextLabel")
    title.Name = "SectionTitle"
    title.Size = UDim2.new(1, -20, 0, 35)
    title.Position = UDim2.new(0, 15, 0, 15)
    title.BackgroundTransparency = 1
    title.Text = "Sistema de Keys"
    title.TextColor3 = OreOFDAY.Config.Colors.Primary
    title.Font = OreOFDAY.Config.Fonts.Primary
    title.TextSize = 20
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = section
    
    local keyInput = OreOFDAY:CreateInput(section, "Digite sua Key", function(text)
        OreOFDAY:ValidateKey(text)
    end)
    keyInput.Position = UDim2.new(0, 15, 0, 65)
    keyInput.Size = UDim2.new(0, 280, 0, 35)
    
    local validateButton = OreOFDAY:CreateButton(section, "Validar Key", function()
        local keyBox = keyInput:FindFirstChild("InputBox")
        if keyBox then
            OreOFDAY:ValidateKey(keyBox.Text)
        end
    end)
    validateButton.Position = UDim2.new(0, 310, 0, 65)
    validateButton.Size = UDim2.new(0, 140, 0, 35)
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, -30, 0, 25)
    statusLabel.Position = UDim2.new(0, 15, 0, 110)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: Aguardando validação..."
    statusLabel.TextColor3 = OreOFDAY.Config.Colors.TextSecondary
    statusLabel.Font = OreOFDAY.Config.Fonts.Secondary
    statusLabel.TextSize = 14
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Parent = section
end

-- Função para criar seção de configurações
function OreOFDAY:CreateSettingsSection(parent)
    local section = Instance.new("Frame")
    section.Name = "SettingsSection"
    section.Size = UDim2.new(1, 0, 0, 120)
    section.BackgroundColor3 = OreOFDAY.Config.Colors.Surface
    section.Parent = parent
    section.LayoutOrder = 4
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = OreOFDAY.Config.CornerRadius
    corner.Parent = section
    
    local neon = OreOFDAY:CreateNeonEffect(section, OreOFDAY.Config.Colors.Primary)
    
    local title = Instance.new("TextLabel")
    title.Name = "SectionTitle"
    title.Size = UDim2.new(1, -20, 0, 35)
    title.Position = UDim2.new(0, 15, 0, 15)
    title.BackgroundTransparency = 1
    title.Text = "Configurações"
    title.TextColor3 = OreOFDAY.Config.Colors.Primary
    title.Font = OreOFDAY.Config.Fonts.Primary
    title.TextSize = 20
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = section
    
    local themeDropdown = OreOFDAY:CreateDropdown(section, {"Dark", "Light", "Custom"}, "Dark", function(theme)
        OreOFDAY:ChangeTheme(theme)
    end)
    themeDropdown.Position = UDim2.new(0, 15, 0, 65)
    themeDropdown.Size = UDim2.new(0, 180, 0, 35)
    
    local saveButton = OreOFDAY:CreateButton(section, "Salvar Config", function()
        OreOFDAY:SaveConfig()
    end)
    saveButton.Position = UDim2.new(0, 210, 0, 65)
    saveButton.Size = UDim2.new(0, 140, 0, 35)
    
    local resetButton = OreOFDAY:CreateButton(section, "Resetar", function()
        OreOFDAY:CreateNotification("Config", "Configurações resetadas!", "Info")
    end)
    resetButton.Position = UDim2.new(0, 370, 0, 65)
    resetButton.Size = UDim2.new(0, 100, 0, 35)
end

-- Função para validar key
function OreOFDAY:ValidateKey(key)
    if key == "" then
        OreOFDAY:CreateNotification("Key", "Digite uma key válida!", "Error")
        return false
    end
    
    -- Simular validação de key
    local isValid = string.len(key) >= 8
    
    if isValid then
        OreOFDAY:CreateNotification("Key", "Key válida! Acesso liberado.", "Success")
        OreOFDAY.KeySystem.ValidKeys[key] = true
    else
        OreOFDAY:CreateNotification("Key", "Key inválida! Tente novamente.", "Error")
    end
    
    return isValid
end

-- Função para mudar tema
function OreOFDAY:ChangeTheme(theme)
    CurrentTheme = theme
    OreOFDAY:CreateNotification("Tema", "Tema alterado para: " .. theme, "Info")
end

-- Função para salvar configurações
function OreOFDAY:SaveConfig()
    local config = {
        Discord = OreOFDAY.Discord,
        Theme = CurrentTheme,
        Keys = OreOFDAY.KeySystem.ValidKeys
    }
    
    OreOFDAY:CreateNotification("Config", "Configurações salvas com sucesso!", "Success")
end

-- Função para obter a library
function OreOFDAY:GetLibrary()
    return OreOFDAY
end

-- Função para inicializar a library
function OreOFDAY:Init()
    OreOFDAY:LoadUI()
    return OreOFDAY
end

-- ========================================
-- API PARA LOADSTRING
-- ========================================

-- Função principal para carregar via loadstring
local function LoadOreOFDAY()
    -- Verificar se já existe uma UI carregada
    if ScreenGui then
        ScreenGui:Destroy()
    end
    
    -- Inicializar a library
    OreOFDAY:Init()
    
    -- Retornar a library para uso
    return OreOFDAY
end

-- Função para criar uma UI customizada
local function CreateCustomUI(config)
    if config and config.colors then
        for key, value in pairs(config.colors) do
            if OreOFDAY.Config.Colors[key] then
                OreOFDAY.Config.Colors[key] = value
            end
        end
    end
    
    return LoadOreOFDAY()
end

-- Função para criar apenas componentes individuais
local function CreateComponent(componentType, parent, ...)
    if componentType == "Button" then
        return OreOFDAY:CreateButton(parent, ...)
    elseif componentType == "Input" then
        return OreOFDAY:CreateInput(parent, ...)
    elseif componentType == "Toggle" then
        return OreOFDAY:CreateToggle(parent, ...)
    elseif componentType == "Slider" then
        return OreOFDAY:CreateSlider(parent, ...)
    elseif componentType == "Dropdown" then
        return OreOFDAY:CreateDropdown(parent, ...)
    elseif componentType == "Notification" then
        return OreOFDAY:CreateNotification(...)
    end
end

-- API pública para loadstring
local API = {
    Load = LoadOreOFDAY,
    CreateCustom = CreateCustomUI,
    CreateComponent = CreateComponent,
    Library = OreOFDAY,
    
    -- Funções rápidas
    Button = function(parent, text, callback)
        return OreOFDAY:CreateButton(parent, text, callback)
    end,
    
    Input = function(parent, placeholder, callback)
        return OreOFDAY:CreateInput(parent, placeholder, callback)
    end,
    
    Toggle = function(parent, text, default, callback)
        return OreOFDAY:CreateToggle(parent, text, default, callback)
    end,
    
    Slider = function(parent, min, max, default, callback)
        return OreOFDAY:CreateSlider(parent, min, max, default, callback)
    end,
    
    Dropdown = function(parent, options, default, callback)
        return OreOFDAY:CreateDropdown(parent, options, default, callback)
    end,
    
    Notification = function(title, message, type, duration)
        return OreOFDAY:CreateNotification(title, message, type, duration)
    end,
    
    -- Configurações
    SetDiscord = function(webhook, serverInvite)
        OreOFDAY.Discord.Webhook = webhook or ""
        OreOFDAY.Discord.ServerInvite = serverInvite or ""
    end,
    
    ValidateKey = function(key)
        return OreOFDAY:ValidateKey(key)
    end,
    
    -- Utilitários
    GetConfig = function()
        return OreOFDAY.Config
    end,
    
    SetTheme = function(theme)
        OreOFDAY:ChangeTheme(theme)
    end
}

-- Retornar a API para loadstring
return API
