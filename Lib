-- Cursor Lib - UI Library
-- Inspirada na Rayfield, mas feita do zero
-- by Cursor AI

local CursorLib = {}

-- Serviços Roblox
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- Tema padrão
local Theme = {
    Background = Color3.fromRGB(28, 28, 34),
    Topbar = Color3.fromRGB(38, 38, 48),
    Tab = Color3.fromRGB(44, 44, 56),
    TabSelected = Color3.fromRGB(70, 130, 180),
    TabText = Color3.fromRGB(220, 220, 230),
    TabTextSelected = Color3.fromRGB(255, 255, 255),
    Section = Color3.fromRGB(36, 36, 44),
    Button = Color3.fromRGB(60, 60, 80),
    ButtonHover = Color3.fromRGB(80, 80, 120),
    ButtonText = Color3.fromRGB(240, 240, 255),
    Accent = Color3.fromRGB(70, 130, 180),
}

-- Utilitário: criar UIListLayout
local function AddListLayout(parent, padding)
    local layout = Instance.new("UIListLayout")
    layout.Parent = parent
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, padding or 6)
    return layout
end

-- Utilitário: arrastar janela
local function MakeDraggable(frame, dragBar)
    local dragging, dragInput, dragStart, startPos
    dragBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    dragBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Criação da janela principal
function CursorLib:CreateWindow(opts)
    opts = opts or {}
    local name = opts.Name or "Cursor UI"
    local theme = opts.Theme or Theme

    -- ScreenGui
    local gui = Instance.new("ScreenGui")
    gui.Name = "CursorLibUI"
    gui.Parent = CoreGui
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- Main Frame
    local main = Instance.new("Frame")
    main.Name = "Main"
    main.Size = UDim2.new(0, 520, 0, 420)
    main.Position = UDim2.new(0.5, -260, 0.5, -210)
    main.BackgroundColor3 = theme.Background
    main.BorderSizePixel = 0
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.Parent = gui

    -- Topbar
    local topbar = Instance.new("Frame")
    topbar.Name = "Topbar"
    topbar.Size = UDim2.new(1, 0, 0, 38)
    topbar.BackgroundColor3 = theme.Topbar
    topbar.BorderSizePixel = 0
    topbar.Parent = main

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 1, 0)
    title.BackgroundTransparency = 1
    title.Text = name
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextColor3 = theme.TabText
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Position = UDim2.new(0, 16, 0, 0)
    title.Parent = topbar

    -- Tabs bar
    local tabsBar = Instance.new("Frame")
    tabsBar.Name = "TabsBar"
    tabsBar.Size = UDim2.new(1, 0, 0, 36)
    tabsBar.Position = UDim2.new(0, 0, 0, 38)
    tabsBar.BackgroundTransparency = 1
    tabsBar.Parent = main
    AddListLayout(tabsBar, 0)

    -- Conteúdo
    local content = Instance.new("Frame")
    content.Name = "Content"
    content.Size = UDim2.new(1, -24, 1, -84)
    content.Position = UDim2.new(0, 12, 0, 74)
    content.BackgroundTransparency = 1
    content.ClipsDescendants = true
    content.Parent = main

    -- Tabs
    local tabs = {}
    local selectedTab = nil

    -- API da janela
    local window = {}

    function window:CreateTab(tabName)
        local tabBtn = Instance.new("TextButton")
        tabBtn.Name = tabName
        tabBtn.Size = UDim2.new(0, 120, 1, 0)
        tabBtn.BackgroundColor3 = theme.Tab
        tabBtn.Text = tabName
        tabBtn.Font = Enum.Font.Gotham
        tabBtn.TextSize = 16
        tabBtn.TextColor3 = theme.TabText
        tabBtn.AutoButtonColor = false
        tabBtn.Parent = tabsBar

        local tabPage = Instance.new("Frame")
        tabPage.Name = tabName .. "_Page"
        tabPage.Size = UDim2.new(1, 0, 1, 0)
        tabPage.BackgroundTransparency = 1
        tabPage.Visible = false
        tabPage.Parent = content
        AddListLayout(tabPage, 8)

        local tabApi = {}
        function tabApi:CreateSection(sectionName)
            local section = Instance.new("Frame")
            section.Name = sectionName
            section.Size = UDim2.new(1, 0, 0, 36)
            section.BackgroundColor3 = theme.Section
            section.BackgroundTransparency = 0.1
            section.Parent = tabPage
            local sectionLabel = Instance.new("TextLabel")
            sectionLabel.Size = UDim2.new(1, 0, 1, 0)
            sectionLabel.BackgroundTransparency = 1
            sectionLabel.Text = sectionName
            sectionLabel.Font = Enum.Font.GothamBold
            sectionLabel.TextSize = 16
            sectionLabel.TextColor3 = theme.TabText
            sectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            sectionLabel.Position = UDim2.new(0, 8, 0, 0)
            sectionLabel.Parent = section
            AddListLayout(section, 6)
            local sectionApi = {}
            function sectionApi:CreateButton(opts)
                local btn = Instance.new("TextButton")
                btn.Name = opts.Name or "Button"
                btn.Size = UDim2.new(1, 0, 0, 32)
                btn.BackgroundColor3 = theme.Button
                btn.Text = opts.Name or "Button"
                btn.Font = Enum.Font.Gotham
                btn.TextSize = 15
                btn.TextColor3 = theme.ButtonText
                btn.AutoButtonColor = false
                btn.Parent = section
                btn.MouseEnter:Connect(function()
                    TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = theme.ButtonHover}):Play()
                end)
                btn.MouseLeave:Connect(function()
                    TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = theme.Button}):Play()
                end)
                btn.MouseButton1Click:Connect(function()
                    if opts.Callback then opts.Callback() end
                end)
                return btn
            end
            return sectionApi
        end
        tabs[tabName] = {btn = tabBtn, page = tabPage}
        tabBtn.MouseButton1Click:Connect(function()
            if selectedTab then
                tabs[selectedTab].btn.BackgroundColor3 = theme.Tab
                tabs[selectedTab].btn.TextColor3 = theme.TabText
                tabs[selectedTab].page.Visible = false
            end
            tabBtn.BackgroundColor3 = theme.TabSelected
            tabBtn.TextColor3 = theme.TabTextSelected
            tabPage.Visible = true
            selectedTab = tabName
        end)
        -- Seleciona o primeiro tab automaticamente
        if not selectedTab then
            tabBtn.BackgroundColor3 = theme.TabSelected
            tabBtn.TextColor3 = theme.TabTextSelected
            tabPage.Visible = true
            selectedTab = tabName
        end
        return tabApi
    end

    -- Arrastar janela
    MakeDraggable(main, topbar)

    return window
end

return CursorLib 
